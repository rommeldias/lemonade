"""Initial version

Revision ID: 9218f15233f8
Revises: 
Create Date: 2020-02-28 10:52:28.852071

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
from sqlalchemy.dialects import mysql
from thorn.migration_utils import is_mysql, is_psql

revision = '9218f15233f8'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('permission',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=100), nullable=False),
                    sa.Column('applicable_to',
                              sa.Enum('SYSTEM', 'DASHBOARD', 'DATA_SOURCE',
                                      'WORKFLOW', 'VISUALIZATION', 'USER',
                                      name='AssetTypeEnumType'), nullable=True),
                    sa.Column('enabled', sa.Boolean(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('role',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=100), nullable=False),
                    sa.Column('all_user', sa.Boolean(), nullable=False),
                    sa.Column('enabled', sa.Boolean(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('user',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('enabled', sa.Boolean(), nullable=False),
                    sa.Column('login', sa.String(length=255), nullable=False),
                    sa.Column('email', sa.String(length=255), nullable=False),
                    sa.Column('authentication_type', 
                        sa.Enum('LDAP', 'INTERNAL', 'AD', 
                            name='AuthenticationTypeEnumType'), nullable=False), 
                    sa.Column('encrypted_password', sa.String(length=255),
                              nullable=False),
                    sa.Column('reset_password_token', sa.String(length=255),
                              nullable=True),
                    sa.Column('reset_password_sent_at', sa.DateTime(),
                              nullable=True),
                    sa.Column('remember_created_at', sa.DateTime(),
                              nullable=True),
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.Column('first_name', sa.String(length=255),
                              nullable=True),
                    sa.Column('last_name', sa.String(length=255),
                              nullable=True),
                    sa.Column('locale', sa.String(length=20), nullable=True),
                    sa.Column('confirmed_at', sa.DateTime(), nullable=True),
                    sa.Column('confirmation_sent_at', sa.DateTime(),
                              nullable=True),
                    sa.Column('unconfirmed_email', sa.String(length=200),
                              nullable=True),
                    sa.Column('notes', sa.String(length=500),
                              nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('user_permission_for_asset',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('asset',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=300), nullable=False),
                    sa.Column('external_id', sa.String(length=100),
                              nullable=False),
                    sa.Column('type',
                              sa.Enum('SYSTEM', 'DASHBOARD', 'DATA_SOURCE',
                                      'WORKFLOW', 'VISUALIZATION', 'USER',
                                      name='AssetTypeEnumType'),
                              nullable=False),
                    sa.Column('owner_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('permission_translation',
                    sa.Column('id', sa.Integer(), autoincrement=False,
                              nullable=False),
                    sa.Column('locale', sa.String(length=10), nullable=False),
                    sa.Column('description', sa.Unicode(length=100),
                              nullable=True),
                    sa.ForeignKeyConstraint(['id'], ['permission.id'],
                                            ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id', 'locale')
                    )
    op.create_table('role_translation',
                    sa.Column('id', sa.Integer(), autoincrement=False,
                              nullable=False),
                    sa.Column('locale', sa.String(length=10), nullable=False),
                    sa.Column('description', sa.String(length=100),
                              nullable=False),
                    sa.ForeignKeyConstraint(['id'], ['role.id'],
                                            ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id', 'locale')
                    )
    op.create_table('user_role',
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('role_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['user.id'], )
                    )
    # ### end Alembic commands ###

    op.create_table('configuration',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=100), nullable=False),
                    sa.Column('value', mysql.LONGTEXT() if is_mysql() else sa.Text(), nullable=False),
                    sa.Column('enabled', sa.Boolean(), nullable=False),
                    sa.Column('editor', sa.Enum('TEXT', 'TEXTAREA', 'INTEGER', 'FLOAT', 
                        'DATE', 'DATETIME', 'PASSWORD', 'URL', 'EMAIL', 'IMAGE', 
                        name='EditorTypeEnumType'), nullable=False),
                    sa.Column('internal', sa.Boolean(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )

    op.create_table('configuration_translation',
                    sa.Column('id', sa.Integer(), autoincrement=False,
                              nullable=False),
                    sa.Column('locale', sa.String(length=10), nullable=False),
                    sa.Column('description', sa.Unicode(length=100),
                              nullable=True),
                    sa.ForeignKeyConstraint(['id'], ['configuration.id'],
                                            ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id', 'locale')
                    )


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_role')
    op.drop_table('role_translation')
    op.drop_table('permission_translation')
    op.drop_table('asset')
    op.drop_table('user_permission_for_asset')
    op.drop_table('user')
    op.drop_table('role')
    op.drop_table('permission')
    op.drop_table('configuration_translation')
    op.drop_table('configuration')

    if is_psql():
        op.get_bind().execute('DROP TYPE "EditorTypeEnumType"')
        op.get_bind().execute('DROP TYPE "AssetTypeEnumType"')
        op.get_bind().execute('DROP TYPE "AuthenticationTypeEnumType"')

# ### end Alembic commands ###
