"""User status

Revision ID: 339a6b145e56
Revises: 9f52309f0d44
Create Date: 2020-03-26 11:53:32.044767

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from thorn.migration_utils import is_psql, is_sqlite

# revision identifiers, used by Alembic.
revision = '339a6b145e56'
down_revision = '9f52309f0d44'
branch_labels = None
depends_on = None


def upgrade():
    if is_psql():
        ds_enum = postgresql.ENUM('ENABLED', 'DELETED', 'PENDING_APPROVAL', name='UserStatusEnumType')
        ds_enum.create(op.get_bind())

    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user', sa.Column('status', sa.Enum('ENABLED', 'DELETED', 'PENDING_APPROVAL', name='UserStatusEnumType',
            server_default='PENDING_APPROVAL'), nullable=True))
    op.get_bind().execute('UPDATE user SET `status` = \'ENABLED\'')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    if is_sqlite():
        with op.batch_alter_table('user') as batch_op:
            batch_op.drop_column('status')
    else:
        op.drop_column('user', 'status')
    if is_psql():
        op.get_bind().execute('DROP TYPE "UserStatusEnumType"')
    # ### end Alembic commands ###
